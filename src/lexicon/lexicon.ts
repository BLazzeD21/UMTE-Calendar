export const lexicon = {
	startMessage:
		'–ü—Ä–∏–≤–µ—Ç!üëãüèª –Ø –±–æ—Ç –¥–ª—è <b>—Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b> –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ <a href="https://umeos.ru/my/">umeos</a>.',
	replyMessage:
		"<u>–Ø –Ω–µ —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è</u>. –í—Å—ë, —á—Ç–æ —è –º–æ–≥—É ‚Äî —ç—Ç–æ <b>–ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b> –≤ —Ç–æ–ø–∏–∫ —á–∞—Ç–∞, –≥–¥–µ —è —Å–æ—Å—Ç–æ—é üòï. \n\n<tg-spoiler>–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚Äî –∑–∞–π–¥–∏ –Ω–∞ –ø–æ—Ä—Ç–∞–ª —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.</tg-spoiler>",
	message: (body: string) => {
		const now = new Date();
		const options: Intl.DateTimeFormatOptions = {
			day: "2-digit",
			month: "2-digit",
			year: "numeric",
			hour: "2-digit",
			minute: "2-digit",
		};
		const formattedDate = now.toLocaleDateString("ru-RU", options);

		const messageText = `<b>üì£ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ ${formattedDate}!</b>\n\n${body}\n<b><a href="https://umeos.ru/my/">umeos</a> ‚Ä¢ <a href="https://umeos.blazzed.tech/calendar.ics">–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—å (ics)</a></b>`;

		return messageText;
	},
	lengthExceeded: "<i>–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—á–µ–Ω—å –±–æ–ª—å—à–∏–µ. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!</i>",
	addedByDate: "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ",
	removedByDate: "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ",
	changedByDate: "‚úèÔ∏è –ò–∑–º–µ–Ω–µ–Ω–æ",
	withoutDate: "–±–µ–∑ –¥–∞—Ç—ã",
	log: {
		noScheduleData: "No schedule data found. Exiting...",
		generatingNewCalendar: "No existing calendar found. Generating new calendar...",
		existingCalendarNotFound: "Existing calendar not found. Skipping update...",
		missingEnvVars: "Missing environment variables. Exiting...",
		launchingWithoutBot: "Bot: launching without a bot...",
		botStarting: "Bot: Starting...",
		botErrorStarting: "Bot: Error starting the bot",
		messageSentSuccessfully: "Bot: The message has been sent successfully",
		errorSendingMessage: "Bot: Error sending message",
		currentCalendarSaved: (name: string) => {
			return `The current calendar has been saved: ${name}`;
		},
		previousCalendarSaved: (name: string) => {
			return `The previous calendar has been saved: ${name}`;
		},
		backupFailed: "Backup failed",
		errorGeneratingCalendar: "Error generating calendar.",
		newCalendarEvents: (count: number) => {
			return `New calendar events: ${count}`;
		},
		newCalendarCreated: "New calendar successfully created!",
		existingCalendarTransform: "Existing calendar file found. Transform...",
		noEventsFound: "There are no events.",
		calendarStats: (oldEvents: number, newEvents: number, totalEvents: number) => {
			return `Old events: ${oldEvents} | New events: ${newEvents} | Total events: ${totalEvents}`;
		},
		updateSkipped: "No changes detected, update skipped",
		successfullyUpdated: "Calendar successfully updated!",
	},
};
